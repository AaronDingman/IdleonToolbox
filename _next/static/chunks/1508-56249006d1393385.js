"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1508],{41508:function(l,e,o){o.d(e,{q5:function(){return n},ZX:function(){return getBuildCost},VR:function(){return getConstruction},Bt:function(){return getExtraMaxLevels},d4:function(){return getTowers}});var t=o(1356),u=o(94978);let createCogstructionData=(l,e)=>{let o=null==l?void 0:l.reduce((l,o,t)=>{let u=getCogstructionCogType(e[t]);if(!u)return l;let{a:n="",c:i="",d:a="",b:d="",e:v="",g:r="",k:s="",f:c=""}=o||{},g=[n,i,a,d,v,r,s,c].map((l,e)=>e<7?"".concat(getCogstructionValue(l)||"",","):getCogstructionValue(l)),p=e[t].includes("Player_")?e[t].split("Player_")[1]:"";return"".concat(l,"\n").concat(u,",").concat(p,",").concat(g.join(""))},"cog type,name,build_rate,flaggy_rate,exp_mult,exp_rate,build_rate_boost,flaggy_rate_boost,flaggy_speed,exp_rate_boost"),t="empties_x,empties_y",u=null==e?void 0:e.slice(0,96);for(let l=0;l<8;l++)for(let e=0;e<12;e++){let o=(7-l)*12+e;"Blank"===u[o]&&(t="".concat(t,"\n").concat(e,",").concat(l))}return{cogData:o,empties:t}},getCogstructionCogType=l=>{if("Blank"===l)return null;if(l.includes("Player_"))return"Character";if("CogY"===l)return"Yang_Cog";if("CogZ"===l)return"Omni_Cog";let e=Object.entries({ad:"Plus",di:"X",up:"Up",do:"Down",ri:"Right",le:"Left",ro:"Row",co:"Col",cr:"Omni"}).find(e=>{let[o]=e;return l.endsWith(o)});return e?"".concat(e[1],"_Cog"):"Cog"},getCogstructionValue=l=>{var e;return(null==l?void 0:null===(e=l.name)||void 0===e?void 0:e.includes("%"))?(null==l?void 0:l.value)>0&&!isNaN((null==l?void 0:l.value)/100)?(null==l?void 0:l.value)/100:"":(null==l?void 0:l.value)||""},getConstruction=(l,e)=>{let o=(null==l?void 0:l.CogMap)||(0,t.tryToParse)(null==l?void 0:l.CogM),u=(null==l?void 0:l.CogOrder)||(0,t.tryToParse)(null==l?void 0:l.CogO),n=createCogMap(o,null==u?void 0:u.length),i=parseConstruction(n),a=getFlags(l,i,u,e),d=createCogstructionData(i,u);return{...a,cogstruction:d}},getFlags=(l,e,o,u)=>{let n=(null==l?void 0:l.FlagUnlock)||(0,t.tryToParse)(null==l?void 0:l.FlagU),i=(null==l?void 0:l.FlagsPlaced)||(0,t.tryToParse)(null==l?void 0:l.FlagP);return parseFlags(n,i,e,o,u)},parseConstruction=l=>null==l?void 0:l.map(l=>{var e;return null===(e=Object.entries(l))||void 0===e?void 0:e.reduce((l,e)=>{let[o,t]=e;return(null===u.cogKeyMap||void 0===u.cogKeyMap?void 0:u.cogKeyMap[o])&&(null===u.cogKeyMap||void 0===u.cogKeyMap?void 0:u.cogKeyMap[o])!=="_"?{...l,[o]:{name:null===u.cogKeyMap||void 0===u.cogKeyMap?void 0:u.cogKeyMap[o],value:t}}:{...l,[o]:t}},{})}),createCogMap=(l,e)=>{let o=[];for(let t=0;t<e;t++)o[t]=(null==l?void 0:l[t])||{};return o},parseFlags=(l,e,o,t,n)=>{var i,a;let d=null==l?void 0:l.reduce((l,n,i)=>{let a=null==t?void 0:t[i],d=null==o?void 0:o[i];return[...l,{currentAmount:-11===n?null===u.flagsReqs||void 0===u.flagsReqs?void 0:u.flagsReqs[i]:parseFloat(n),requiredAmount:null===u.flagsReqs||void 0===u.flagsReqs?void 0:u.flagsReqs[i],flagPlaced:null==e?void 0:e.includes(i),cog:{name:a,stats:d}}]},[]),v=null!==(a=null==n?void 0:null===(i=n.gemShopPurchases)||void 0===i?void 0:i.find((l,e)=>118===e))&&void 0!==a?a:0,r=null==o?void 0:o.map((l,e)=>({...l,name:null==t?void 0:t[e]})).filter(l=>{let{name:e}=l;return null==e?void 0:e.includes("Player_")}).reduce((l,e)=>{let{a:o}=e;return l+((null==o?void 0:o.value)||0)},0);return{...d=evaluateBoard(d),totalFlaggyRate:(null==d?void 0:d.totalFlaggyRate)*(1+50*v/100),playersBuildRate:r}},evaluateBoard=l=>{let{boosted:e,relations:o}=getAllBoostedCogs(l),t=0,u=0,n=0,i=null==l?void 0:l.map((l,o)=>{var i,a,d,v,r,s,c,g,p,f,h,C,y,M,m,b,_,w,x,k;let{cog:T}=l||{},{e:P,f:B,g:F}=(null==e?void 0:e[o])||{},R=(null==P?void 0:P.value)>0&&(null==T?void 0:null===(a=T.stats)||void 0===a?void 0:null===(i=a.a)||void 0===i?void 0:i.value)>0?Math.ceil((null==T?void 0:null===(v=T.stats)||void 0===v?void 0:null===(d=v.a)||void 0===d?void 0:d.value)*(1+(null==P?void 0:P.value)/100)):(null==T?void 0:null===(s=T.stats)||void 0===s?void 0:null===(r=s.a)||void 0===r?void 0:r.value)||0;t+=R,u+=(null==T?void 0:null===(g=T.stats)||void 0===g?void 0:null===(c=g.d)||void 0===c?void 0:c.value)>0?null==T?void 0:null===(f=T.stats)||void 0===f?void 0:null===(p=f.d)||void 0===p?void 0:p.value:0;let K=(null==F?void 0:F.value)>0&&(null==T?void 0:null===(C=T.stats)||void 0===C?void 0:null===(h=C.c)||void 0===h?void 0:h.value)>0?(null==T?void 0:null===(M=T.stats)||void 0===M?void 0:null===(y=M.c)||void 0===y?void 0:y.value)+(null==T?void 0:null===(b=T.stats)||void 0===b?void 0:null===(m=b.c)||void 0===m?void 0:m.value)*(null==F?void 0:F.value)/100:(null==T?void 0:null===(w=T.stats)||void 0===w?void 0:null===(_=w.c)||void 0===_?void 0:_.value)||0;return n+=K,{...l,cog:{...T,stats:{...null==T?void 0:T.stats,a:{...null==T?void 0:null===(x=T.stats)||void 0===x?void 0:x.a,value:R},c:{...null==T?void 0:null===(k=T.stats)||void 0===k?void 0:k.c,value:K}}}}});return{relations:o,totalBuildRate:t,totalExpRate:u,totalFlaggyRate:n,board:i}},getAllBoostedCogs=l=>{let e={},o=Array(96).fill(0);for(let a=0;a<8;a++)for(let d=0;d<12;d++){var t,u,n,i;let v=(7-a)*12+d,r=null==l?void 0:null===(t=l[v])||void 0===t?void 0:t.cog,s=null==l?void 0:null===(n=l[v])||void 0===n?void 0:null===(u=n.cog)||void 0===u?void 0:u.stats,c=getAffectedIndexes(r,d,a);if((null==c?void 0:c.length)>0){c=null==c?void 0:null===(i=c.map(l=>{let[e,o]=l;return e<0||o<0||e>=12||o>=8?null:(7-o)*12+e}))||void 0===i?void 0:i.filter(l=>null!==l);let{e:t,f:u,g:n}=s||{};(t||u||n)&&(null==c||c.forEach(t=>{var u,n;let{e:i,f:a,g:d}=(null==l?void 0:null===(n=l[v])||void 0===n?void 0:null===(u=n.cog)||void 0===u?void 0:u.stats)||{};if((null==o?void 0:o[t])===0)o[t]={e:{...i,value:Math.ceil(null==i?void 0:i.value)},f:{...a,value:Math.ceil(null==a?void 0:a.value)},g:{...d,value:Math.ceil(null==d?void 0:d.value)}};else{let{e:l,f:e,g:u}=o[t]||{};o[t]={e:{...l,value:Math.ceil(((null==l?void 0:l.value)||0)+((null==i?void 0:i.value)||0))},f:{...e,value:Math.ceil(((null==e?void 0:e.value)||0)+((null==a?void 0:a.value)||0))},g:{...u,value:Math.ceil(((null==u?void 0:u.value)||0)+((null==d?void 0:d.value)||0))}}}e[t]=[...e[t]||[],v]}))}}return{boosted:o,relations:e}},getAffectedIndexes=(l,e,o)=>{var t;let u=[];switch(null==l?void 0:null===(t=l.stats)||void 0===t?void 0:t.h){case"diagonal":u.push([e-1,o-1],[e+1,o-1],[e-1,o+1],[e+1,o+1]);break;case"adjacent":u.push([e-1,o],[e,o+1],[e+1,o],[e,o-1]);break;case"up":u.push([e-1,o+2],[e,o+2],[e+1,o+2],[e-1,o+1],[e,o+1],[e+1,o+1]);break;case"right":u.push([e+2,o-1],[e+2,o],[e+2,o+1],[e+1,o-1],[e+1,o],[e+1,o+1]);break;case"down":u.push([e-1,o-2],[e,o-2],[e+1,o-2],[e-1,o-1],[e,o-1],[e+1,o-1]);break;case"left":u.push([e-2,o-1],[e-2,o],[e-2,o+1],[e-1,o-1],[e-1,o],[e-1,o+1]);break;case"row":for(let l=0;l<12;l++)e!==l&&u.push([l,o]);break;case"column":for(let l=0;l<8;l++)o!==l&&u.push([e,l]);break;case"corners":u.push([e-2,o-2],[e+2,o-2],[e-2,o+2],[e+2,o+2]);break;case"around":u.push([e,o-2],[e-1,o-1],[e,o-1],[e+1,o-1],[e-2,o],[e-1,o],[e+1,o],[e+2,o],[e-1,o+1],[e,o+1],[e+1,o+1],[e,o+2]);break;case"everything":for(let l=0;l<8;l++)for(let t=0;t<12;t++)(o!==l||e!==t)&&u.push([t,l])}return u},getTowers=l=>{let e=(null==l?void 0:l.TowerInfo)||(0,t.tryToParse)(null==l?void 0:l.Tower),o=(0,t.tryToParse)(null==l?void 0:l.TotemInfo)||(null==l?void 0:l.TotemInfo);return parseTowers(e,o)},parseTowers=(l,e)=>{var o;let t=null==e?void 0:e[0],n=null==t?void 0:t.reduce((l,e)=>l+e,0),i=Object.keys(u.towers).length,a=l.slice(54,62),d=0,v=0,r=null===(o=Object.entries(u.towers))||void 0===o?void 0:o.map(e=>{let[o,t]=e,u=null==l?void 0:l[null==t?void 0:t.index];return(null==t?void 0:t.index)>=9&&(null==t?void 0:t.index)<=17&&u>50&&(d+=u-50),v+=u,{...t,name:o,level:u,nextLevel:u+1===l[t.index+i],progress:null==l?void 0:l[(null==t?void 0:t.index)+12+2*i],inProgress:null==a?void 0:a.includes(null==t?void 0:t.index),slot:null==a?void 0:a.findIndex(l=>l===(null==t?void 0:t.index))}});return{data:r,buildMultiplier:null===u.randomList||void 0===u.randomList?void 0:u.randomList[13].split(" "),wizardOverLevels:d,totalLevels:v,totalWaves:n,towersTwo:null==l?void 0:l[2]}},getBuildCost=(l,e,o,t)=>{if(0===t)return 20*Math.pow(e+1,2)*Math.pow(1.6,e+1);{var u;let n=Number(null==l?void 0:null===(u=l.buildMultiplier)||void 0===u?void 0:u[t]);return n*Math.pow(o,e)}},n=[250,500,750,1e3,1250,1500,2500],getConstructionMasteryBonus=(l,e)=>6===e?l>=(null==n?void 0:n[6])?30:0:4===e?l>=(null==n?void 0:n[3])?100:0:5===e?l>=(null==n?void 0:n[5])?100:0:3===e&&l>=(null==n?void 0:n[1])?35:0,getExtraMaxLevels=(l,e,o)=>50===e?Math.round(2*o+getConstructionMasteryBonus(l,6,0)):101===e?getConstructionMasteryBonus(l,4,0):100===e?getConstructionMasteryBonus(l,5,0):15===e?getConstructionMasteryBonus(l,3,0):0}}]);